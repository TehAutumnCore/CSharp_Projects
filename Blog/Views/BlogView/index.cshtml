@model Blog.ViewModels.BlogIndexViewModel
@{
    ViewData["Title"] = "Blog";
}

<div class="container py-5">
    <h2 class="mb-4 text-center">@ViewData["Title"]</h2>

    @if (User.IsInRole("Admin"))
    {
        <div class="text-center mb-4">
            <a class="btn btn-success" asp-action="Create">+ Create New Post</a>
        </div>
    }

    @if (!Model.BlogPosts.Any())
    {
        <div class="alert alert-info text-center">
            No Blog Posts available.
        </div>
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 g-4">
            @foreach (var post in Model.BlogPosts)
            {
                <div class="card mb-4 shadow-sm border-0">
                    <div class="card-body">
                        <h3 class="card-title fw-bold">@post.Title</h3>
                        <p class="card-text text-muted fst-italic mb-2">@post.Description</p>

                        <div class="d-flex justify-content-between align-items-center">
                            <small class="text-secondary">
                                <strong>Author:</strong> @post.Author<br />
                                <strong>Date:</strong> @post.Date.ToString("MMMM dd, yyyy")
                            </small>

                            @if (User.IsInRole("Admin"))
                            {
                                <div class="btn-group">
                                    <a asp-action="Edit" asp-route-id="@post.Id" class="btn btn-sm btn-outline-primary">Edit</a>
                                    <a asp-action="Delete" asp-route-id="@post.Id" class="btn btn-sm btn-outline-danger">Delete</a>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }

        </div>
    }

    <nav class="mt-4">
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pages="@(Model.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (int pageNumber = 1; pageNumber <= Model.TotalPages; pageNumber++)
            {
                <li class="page-item @(pageNumber == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pages="@pageNumber">@pageNumber</a>
                </li>
            }

            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link" asp-action="Index" asp-route-pages="@(Model.CurrentPage + 1)">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>

<!-- Pagination Flow + Logic
        User will go to page 2,
        the Controller:
        view <- BlogPosts = posts, <-Model.BlogPosts(models)
        view <- CurrentPage = pages, <- Model.CurrentPage(ViewModels)
        view <- TotalPages = totalPages <- Model.TotalPages(ViewModels)

        This will set each BlogPost, current page, and next page for the view.
    -->